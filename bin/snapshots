#!/usr/bin/env bash

# Build documentation from snapshots
#
# Expects to be run against a directory with checked out repositories for:
#
#   - playframework
#   - scalatestplus-play
#   - anorm
#   - play-ebean
#   - play-json
#   - play-slick
#   - twirl
#   - omnidoc
#   - play-generated-docs

set -e

# process arguments

declare PLAY_BRANCH="master"
declare SCALATESTPLUS_PLAY_BRANCH="master"
declare ANORM_BRANCH="master"
declare PLAY_EBEAN_BRANCH="master"
declare PLAY_JSON_BRANCH="master"
declare PLAY_SLICK_BRANCH="master"
declare TWIRL_BRANCH="master"

unset DEPLOY
declare BRANCH=""
declare -a args

while [[ $# -gt 0 ]] ; do
  case "$1" in
    -b|--branch) BRANCH=$2; shift 2 ;;
    *) args=("${args[@]}" "$1"); shift ;;
  esac
done
set -- "${args[@]}"

DEPLOY=$1

if [ -z "$DEPLOY" ] ; then
  DEPLOY=$(pwd)
fi

# checkout out a clean version of a branch
function checkout {
  local dir=$1
  local branch=$2
  echo "Checking out $dir ($branch)"
  cd $dir
  git fetch
  git checkout $branch
  git reset --hard origin/$branch
  git clean -fxd
}

# detect base version from version.sbt
function extract_version {
  echo $(cat version.sbt | sed 's/version in ThisBuild := "\(.*\)"/\1/')
}

# versioned sbt build for play modules
function build {
  sbt -Dplay.version=$PLAY_VERSION -Dtwirl.version=$TWIRL_VERSION "$@"
}

if [ -n "$BRANCH" ] ; then
  echo "Checkout out omnidoc..."
  owd=$(pwd)
  # Update Omnidoc
  checkout $DEPLOY/omnidoc $BRANCH
  echo "Restarting script with updated omnidoc..."
  # And re-execute
  cd $owd
  exec "$0" "$DEPLOY"
fi

# checkout branches and extract versions

echo "Checking out branches and extracting versions..."

pushd $DEPLOY

checkout $DEPLOY/playframework $PLAY_BRANCH
PLAY_VERSION=$(extract_version)

checkout $DEPLOY/scalatestplus-play $SCALATESTPLUS_PLAY_BRANCH
SCALATESTPLUS_PLAY_VERSION=$(extract_version)

checkout $DEPLOY/anorm $ANORM_BRANCH
ANORM_VERSION=$(extract_version)

checkout $DEPLOY/play-ebean $PLAY_EBEAN_BRANCH
PLAY_EBEAN_VERSION=$(extract_version)

checkout $DEPLOY/play-json $PLAY_JSON_BRANCH
PLAY_JSON_VERSION=$(extract_version)

checkout $DEPLOY/play-slick $PLAY_SLICK_BRANCH
PLAY_SLICK_VERSION=$(extract_version)

checkout $DEPLOY/twirl $TWIRL_BRANCH
TWIRL_VERSION=$(extract_version)

# build and publish snapshots

echo
echo --- Building snapshots
echo
echo "               play: $PLAY_VERSION"
echo " scalatestplus-play: $SCALATESTPLUS_PLAY_VERSION"
echo "              anorm: $ANORM_VERSION"
echo "         play-ebean: $PLAY_EBEAN_VERSION"
echo "          play-json: $PLAY_JSON_VERSION"
echo "         play-slick: $PLAY_SLICK_VERSION"
echo "              twirl: $TWIRL_VERSION"
echo "            omnidoc: $PLAY_VERSION"

export PLAY_VERSION

echo
echo --- twirl $TWIRL_VERSION
echo

cd $DEPLOY/twirl
build +publishLocal plugin/publishLocal

echo
echo --- play $PLAY_VERSION
echo

cd $DEPLOY/playframework
build -Dtwirl.version=$TWIRL_VERSION +publishLocal

echo
echo --- scalatestplus-play $SCALATESTPLUS_PLAY_VERSION
echo

cd $DEPLOY/scalatestplus-play
build +publishLocal

echo
echo --- anorm $ANORM_VERSION
echo

cd $DEPLOY/anorm
build +publishLocal

echo
echo --- play-ebean $PLAY_EBEAN_VERSION
echo

cd $DEPLOY/play-ebean
build +publishLocal plugin/publishLocal

echo
echo --- play-json $PLAY_JSON_VERSION
echo

cd $DEPLOY/play-json
build +publishLocal

echo
echo --- play-slick $PLAY_SLICK_VERSION
echo

cd $DEPLOY/play-slick
build +publishLocal

echo
echo --- omnidoc $PLAY_VERSION
echo

versions=""
versions="$versions -Dplay.version=$PLAY_VERSION"
versions="$versions -Dscalatestplus-play.version=$SCALATESTPLUS_PLAY_VERSION"
versions="$versions -Danorm.version=$ANORM_VERSION"
versions="$versions -Dplay-ebean.version=$PLAY_EBEAN_VERSION"
versions="$versions -Dplay-json.version=$PLAY_JSON_VERSION"
versions="$versions -Dplay-slick.version=$PLAY_SLICK_VERSION"
versions="$versions -Dtwirl.version=$TWIRL_VERSION"

cd $DEPLOY/omnidoc
echo "Build omnidoc with versions: $versions"
sbt $versions +publishLocal

echo
echo --- play-generated-docs
echo

$DEPLOY/omnidoc/bin/deploy --branch $PLAY_BRANCH $DEPLOY/play-generated-docs


# cleanup

popd
unset PLAY_VERSION
